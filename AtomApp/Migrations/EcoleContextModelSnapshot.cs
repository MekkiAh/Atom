// <auto-generated />
using System;
using AtomApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AtomApp.Migrations
{
    [DbContext(typeof(EcoleContext))]
    partial class EcoleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AtomApp.Models.Absence", b =>
                {
                    b.Property<int>("etudiantId")
                        .HasColumnType("int");

                    b.Property<int>("seanceId")
                        .HasColumnType("int");

                    b.HasKey("etudiantId", "seanceId");

                    b.HasIndex("seanceId");

                    b.ToTable("absences");
                });

            modelBuilder.Entity("AtomApp.Models.Classe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("nbMaxEt")
                        .HasColumnType("int");

                    b.Property<string>("nomClasse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("classes");
                });

            modelBuilder.Entity("AtomApp.Models.Etudiant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("classeId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numTel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("classeId");

                    b.ToTable("etudiants");
                });

            modelBuilder.Entity("AtomApp.Models.Matiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("moduleId")
                        .HasColumnType("int");

                    b.Property<string>("nomMatiere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("moduleId");

                    b.ToTable("matieres");
                });

            modelBuilder.Entity("AtomApp.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nomModule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("modules");
                });

            modelBuilder.Entity("AtomApp.Models.Seance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("classeId")
                        .HasColumnType("int");

                    b.Property<string>("date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("matiereId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("classeId");

                    b.HasIndex("matiereId");

                    b.ToTable("seances");
                });

            modelBuilder.Entity("AtomApp.Models.Absence", b =>
                {
                    b.HasOne("AtomApp.Models.Etudiant", "etudiant")
                        .WithMany("absences")
                        .HasForeignKey("etudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtomApp.Models.Seance", "seance")
                        .WithMany("absences")
                        .HasForeignKey("seanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AtomApp.Models.Etudiant", b =>
                {
                    b.HasOne("AtomApp.Models.Classe", "classe")
                        .WithMany("Etudiants")
                        .HasForeignKey("classeId");
                });

            modelBuilder.Entity("AtomApp.Models.Matiere", b =>
                {
                    b.HasOne("AtomApp.Models.Module", "module")
                        .WithMany("matieres")
                        .HasForeignKey("moduleId");
                });

            modelBuilder.Entity("AtomApp.Models.Seance", b =>
                {
                    b.HasOne("AtomApp.Models.Classe", "classe")
                        .WithMany("Seances")
                        .HasForeignKey("classeId");

                    b.HasOne("AtomApp.Models.Matiere", "matiere")
                        .WithMany()
                        .HasForeignKey("matiereId");
                });
#pragma warning restore 612, 618
        }
    }
}
